import json

def lambda_handler(
    event: dict, 
    context: dict = None
) -> dict:
    """
    :param `event`: (dict) Data sent during lambda function invocation.
    :param `context`: (dict) Generated by the platform and contains information about the underlying infrastructure
        and execution environment, such as allowed runtime and memory.
    """
    if "AWS_LAMBDA_EVENT_BODY" in event.keys():
        # Access the payload from the event parameter
        payload_str = event.get("AWS_LAMBDA_EVENT_BODY")

        # Parse the JSON payload
        payload: dict = json.loads(payload_str)

        # Extract parameters
        msg = payload.get("message", "Message not found")
    else:
        # Extract parameters
        msg = event.get("message", "Message not found")

    print(f'Received message: {msg}')

    return {
        'statusCode': 200,
        'body': json.dumps(msg)
    }